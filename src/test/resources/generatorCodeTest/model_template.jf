package #(baseModelPackageName);

import com.jfinal.plugin.activerecord.Model;
import com.jfinal.plugin.activerecord.IBean;
import com.jia54321.utils.entity.query.*;
import com.jia54321.utils.jfinal.activerecord.config.BaseModel;

import java.util.Map;

/**
 * Vo对象 #(tableMetaExtend.remarks)
 * Generated by GG, do not modify this file.
 */
@ApiModel(value = "会员信息")
@Data
@NoArgsConstructor
@AllArgsConstructor
@Builder
public class #(tableMeta.modelName)VO {
/**
  #set(aliasTabName = 'tabX')
  #set(aliasVoName = 'voX')
 */

/**
  selectList 带别名的查询列表, 拼接查询条件
  #for(cm : tableMeta.columnMetas)
    <if test="#(cm.attrName) != null  and #(cm.attrName) != ''">and #(aliasTabName).#(cm.name) = #{#(aliasVoName).#(cm.attrName)}</if>
  #end
 */

/**
  batchInsert
  tab字段
  #for(cm : tableMeta.columnMetas)
   <if test="item.#(cm.attrName) != null  and #(aliasVoName).#(cm.attrName) != ''">#(cm.name),</if>
  #end

  Vo字段
  #for(cm : tableMeta.columnMetas)
   <if test="item.#(cm.attrName) != null  and #(aliasVoName).#(cm.attrName) != ''">#{#(aliasTabName).#(cm.name)},</if>
  #end
 */

/**
  batchUpdate
  #for(cm : tableMeta.columnMetas)
    #(cm.name) = CASE id
	<foreach collection="list" item="item" index="index" open="" separator="" close="">
		WHEN #{item.id} THEN #{item.#(cm.attrName)}
	</foreach>
	END,
  #end
 */

/**
  cloumn
  #for(cm : tableMeta.columnMetas)
    #if ( cm.javaType.equals("java.lang.Long") )
	<result column="#(cm.name)" property="#(cm.attrName)" jdbcType="BIGINT" />
    #else if ( cm.javaType.equals("java.lang.String") )
	<result column="#(cm.name)" property="#(cm.attrName)" jdbcType="VARCHAR" />
    #else if ( cm.javaType.equals("java.lang.Integer") || cm.javaType.equals("java.lang.Boolean") )
	<result column="#(cm.name)" property="#(cm.attrName)" jdbcType="INTEGER" />
    #else if ( cm.javaType.equals("java.math.BigDecimal") )
	<result column="#(cm.name)" property="#(cm.attrName)" jdbcType="DECIMAL" />
    #else
	<result column="#(cm.name)" property="#(cm.attrName)" jdbcType="#(cm.javaType)" />
    #end
  #end
 */

/**
  Vo字段
  #for(cm : tableMeta.columnMetas) #{#(aliasVoName).#(cm.attrName)},#end
  tab字段
  #for(cm : tableMeta.columnMetas) #(aliasTabName).#(cm.name),#end

  #if (tableMeta.name.equals("t_park_access_rule"))
      #set(aliasTabNameX = 'ar')
      #set(aliasVoNameX = 'voX')
        #set(asNamex = 'ar')
    #for(cm : tableMeta.columnMetas) #(aliasTabNameX).#(cm.name) as #(asNamex)_#(cm.name),#end
  #end

  #if (tableMeta.name.equals("t_car_feesroleinfo"))
      #set(aliasTabNameX = 'cf')
      #set(aliasVoNameX = 'voX')
        #set(asNamex = 'cf')
    #for(cm : tableMeta.columnMetas) #(aliasTabNameX).#(cm.name) as #(asNamex)_#(cm.name),#end
  #end

  #if (tableMeta.name.equals("t_park_member_group"))
      #set(aliasTabNameX = 'mg')
      #set(aliasVoNameX = 'voX')
        #set(asNamex = 'mg')
    #for(cm : tableMeta.columnMetas) #(aliasTabNameX).#(cm.name) as #(asNamex)_#(cm.name),#end
  #end

  #if (tableMeta.name.equals("t_park_member_group_relation"))
      #set(aliasTabNameX = 'mgr')
      #set(aliasVoNameX = 'voX')
        #set(asNamex = 'mgr')
    #for(cm : tableMeta.columnMetas) #(aliasTabNameX).#(cm.name) as #(asNamex)_#(cm.name),#end
  #end

  #if (tableMeta.name.equals("t_park_group_seatinfo_cloud"))
      #set(aliasTabNameX = 'gsc')
      #set(aliasVoNameX = 'voX')
        #set(asNamex = 'gsc')
    #for(cm : tableMeta.columnMetas) #(aliasTabNameX).#(cm.name) as #(asNamex)_#(cm.name),#end
  #end

  #if (tableMeta.name.equals("t_park_group_memberinfo_cloud"))
      #set(aliasTabNameX = 'gmc')
      #set(aliasVoNameX = 'voX')
        #set(asNamex = 'gmc')
    #for(cm : tableMeta.columnMetas) #(aliasTabNameX).#(cm.name) as #(asNamex)_#(cm.name),#end
  #end

  #if (tableMeta.name.equals("t_park_group_carinfo_cloud"))
      #set(aliasTabNameX = 'gcc')
      #set(aliasVoNameX = 'voX')
        #set(asNamex = 'gcc')
    #for(cm : tableMeta.columnMetas) #(aliasTabNameX).#(cm.name) as #(asNamex)_#(cm.name),#end
  #end


 */

#for(cm : tableMeta.columnMetas)
	/**  #(cm.remarks)  tab.field=#(cm.name) */
	@ApiModelProperty(value="#(cm.remarks)", dataType = "#(cm.javaType)")
	private #(cm.javaType) #(cm.attrName);

#end
}

