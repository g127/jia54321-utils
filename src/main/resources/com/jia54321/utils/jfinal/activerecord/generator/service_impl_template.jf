package #(serviceImplPackageName);

import com.jia54321.utils.*;
import com.jia54321.utils.entity.query.*;
import #(modelPackageName).*;
import #(servicePackageName).*;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.context.annotation.DependsOn;
import org.springframework.stereotype.Service;

import java.util.List;
import java.util.Map;

/**
 * Generated by GG, do not modify this file.
 */
@Service
@DependsOn("activeRecordPlugin")
public class #(tableMetaExtend.serviceImplName) implements #(tableMetaExtend.serviceName) {
    /** . */
    public static final Logger log = LoggerFactory.getLogger(#(tableMetaExtend.serviceImplName).class);

    /** #(tableMetaExtend.modelName) Dao */
    private #(tableMetaExtend.modelName) dao = new #(tableMetaExtend.modelName)().dao();

    /**
     * 查询分页列表
     *
     * @param and        查询条件and
     * @param or         查询条件or
     * @param sort       排序条件sort
     * @param pageNumber 页码
     * @param pageSize   页数
     * @return 实体列表
     */
    @Override
    public QueryContent<#(tableMetaExtend.modelName)> findPageList(
       Map<String, Object> and, Map<String, Object> or, Map<String, Object> sort, Integer pageNumber, Integer pageSize)
    {
        return dao.findPageList(and, or, sort, pageNumber, pageSize);
    }

    /**
     * 查询主键
     *
     * @param id 主键ID
     * @return 实体
     */
    @Override
    public #(tableMetaExtend.modelName) findById(String id)
    {
        return dao.findById(id);
    }

    /**
     * 新增
     *
     * @param po 设备指标关系
     * @return 结果
     */
    @Override
    public int insert(#(tableMetaExtend.modelName) po)
    {
        return po.save() ? 1 : 0;
    }

    /**
     * 修改
     *
     * @param po 设备指标关系
     * @return 结果
     */
    @Override
    public int update(#(tableMetaExtend.modelName) po)
    {
        return po.save() ? 1 : 0;
    }

    /**
     * 批量删除
     *
     * @param ids 主键数组
     * @return 结果
     */
    @Override
    public int deleteByIds(Object[] ids)
    {
        return dao.deleteByIds(ids)? ids.length : 0;
    }

    /**
     * 删除信息
     *
     * @param id 主键
     * @return 结果
     */
    @Override
    public int deleteById(Object id)
    {
        return dao.deleteById(id)? 1 : 0;
    }
}

